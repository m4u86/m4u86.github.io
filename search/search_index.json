{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"sample-1/","text":"\ud83e\uddfe Basic Markdown Syntax 1. Headings # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 2. Bold & Italic Bold markdown **bold text** or __bold text__ Italic markdown *italic text* or _italic text_ ~~Strikethrough~~ markdown ~~strikethrough~~ 3. Lists Unordered list: ```markdown Item 1 Item 2 Sub-item ``` Ordered list: ```markdown First item Second item ``` 4. Links & Images Links: markdown [Google](https://google.com) Images: markdown ![Alt text](image.jpg) 5. Code Inline code: markdown Use the `print()` function. Code block: python print(\"Hello World\") 6. Blockquotes > This is a quote. 7. Horizontal Rule --- 8. Tables | Name | Age | |----------|-----| | Alice | 24 | | Bob | 30 | 9. Task Lists - [x] Completed task - [ ] Incomplete task Let me know if you want a printable cheat sheet or help with advanced features like footnotes, math formulas (LaTeX), or tables of contents!","title":"Sample 1"},{"location":"sample-1/#basic-markdown-syntax","text":"","title":"\ud83e\uddfe Basic Markdown Syntax"},{"location":"sample-1/#1-headings","text":"# Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6","title":"1. Headings"},{"location":"sample-1/#2-bold-italic","text":"Bold markdown **bold text** or __bold text__ Italic markdown *italic text* or _italic text_ ~~Strikethrough~~ markdown ~~strikethrough~~","title":"2. Bold &amp; Italic"},{"location":"sample-1/#3-lists","text":"Unordered list: ```markdown Item 1 Item 2 Sub-item ``` Ordered list: ```markdown First item Second item ```","title":"3. Lists"},{"location":"sample-1/#4-links-images","text":"Links: markdown [Google](https://google.com) Images: markdown ![Alt text](image.jpg)","title":"4. Links &amp; Images"},{"location":"sample-1/#5-code","text":"Inline code: markdown Use the `print()` function. Code block: python print(\"Hello World\")","title":"5. Code"},{"location":"sample-1/#6-blockquotes","text":"> This is a quote.","title":"6. Blockquotes"},{"location":"sample-1/#7-horizontal-rule","text":"---","title":"7. Horizontal Rule"},{"location":"sample-1/#8-tables","text":"| Name | Age | |----------|-----| | Alice | 24 | | Bob | 30 |","title":"8. Tables"},{"location":"sample-1/#9-task-lists","text":"- [x] Completed task - [ ] Incomplete task Let me know if you want a printable cheat sheet or help with advanced features like footnotes, math formulas (LaTeX), or tables of contents!","title":"9. Task Lists"},{"location":"sample-2/","text":"Here's a quick guide on how to use NGINX , covering installation, basic configuration, and common tasks. NGINX is a powerful web server, reverse proxy, and load balancer. \ud83d\ude80 Quick Guide: How to Use NGINX 1. Install NGINX On Ubuntu/Debian: sudo apt update sudo apt install nginx On CentOS: sudo yum install epel-release sudo yum install nginx Start and enable NGINX: sudo systemctl start nginx sudo systemctl enable nginx Check status: sudo systemctl status nginx 2. Basic Commands sudo systemctl stop nginx # Stop NGINX sudo systemctl restart nginx # Restart NGINX sudo systemctl reload nginx # Reload config without downtime nginx -t # Test config for syntax errors 3. Directory Structure Path Description /etc/nginx/ Main config directory /etc/nginx/nginx.conf Main configuration file /etc/nginx/sites-available/ Site configurations (Debian/Ubuntu) /etc/nginx/conf.d/ Per-site config files (CentOS) /usr/share/nginx/html Default web root (CentOS) /var/www/html Default web root (Ubuntu) 4. Basic Web Server Setup Create a simple HTML site: sudo nano /var/www/example.com/index.html Add some HTML content: <h1>Hello from example.com</h1> Then create a server block in NGINX: Ubuntu (sites-available): sudo nano /etc/nginx/sites-available/example.com CentOS (conf.d): sudo nano /etc/nginx/conf.d/example.com.conf Add this config: server { listen 80; server_name example.com www.example.com; location / { root /var/www/example.com; index index.html; try_files $uri $uri/ =404; } } Enable the site (Ubuntu only): sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/ Test and reload: sudo nginx -t sudo systemctl reload nginx 5. Reverse Proxy Setup Use NGINX as a reverse proxy to forward requests to another service (like Node.js or backend API): server { listen 80; server_name api.example.com; location / { proxy_pass http://localhost:3000; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } } 6. Load Balancing (Basic) upstream backend_servers { server 192.168.1.10; server 192.168.1.11; server 192.168.1.12; } server { listen 80; location / { proxy_pass http://backend_servers; } } 7. SSL/TLS with Let\u2019s Encrypt (Optional but Recommended) Install Certbot: sudo apt install certbot python3-certbot-nginx # Ubuntu sudo yum install certbot python3-certbot-nginx # CentOS Obtain certificate: sudo certbot --nginx -d example.com -d www.example.com Certbot will automatically update your NGINX config to use HTTPS. \u2705 Tips Always test NGINX config before reloading: sudo nginx -t Keep configs clean and modular. Use tools like NGINX Config Generator if you're new. Logs are at /var/log/nginx/access.log and /var/log/nginx/error.log . Let me know if you want guides for specific setups like WordPress, Docker, HTTP/2, etc.!","title":"Sample 2"},{"location":"sample-2/#quick-guide-how-to-use-nginx","text":"","title":"\ud83d\ude80 Quick Guide: How to Use NGINX"},{"location":"sample-2/#1-install-nginx","text":"","title":"1. Install NGINX"},{"location":"sample-2/#on-ubuntudebian","text":"sudo apt update sudo apt install nginx","title":"On Ubuntu/Debian:"},{"location":"sample-2/#on-centos","text":"sudo yum install epel-release sudo yum install nginx","title":"On CentOS:"},{"location":"sample-2/#start-and-enable-nginx","text":"sudo systemctl start nginx sudo systemctl enable nginx Check status: sudo systemctl status nginx","title":"Start and enable NGINX:"},{"location":"sample-2/#2-basic-commands","text":"sudo systemctl stop nginx # Stop NGINX sudo systemctl restart nginx # Restart NGINX sudo systemctl reload nginx # Reload config without downtime nginx -t # Test config for syntax errors","title":"2. Basic Commands"},{"location":"sample-2/#3-directory-structure","text":"Path Description /etc/nginx/ Main config directory /etc/nginx/nginx.conf Main configuration file /etc/nginx/sites-available/ Site configurations (Debian/Ubuntu) /etc/nginx/conf.d/ Per-site config files (CentOS) /usr/share/nginx/html Default web root (CentOS) /var/www/html Default web root (Ubuntu)","title":"3. Directory Structure"},{"location":"sample-2/#4-basic-web-server-setup","text":"Create a simple HTML site: sudo nano /var/www/example.com/index.html Add some HTML content: <h1>Hello from example.com</h1> Then create a server block in NGINX:","title":"4. Basic Web Server Setup"},{"location":"sample-2/#ubuntu-sites-available","text":"sudo nano /etc/nginx/sites-available/example.com","title":"Ubuntu (sites-available):"},{"location":"sample-2/#centos-confd","text":"sudo nano /etc/nginx/conf.d/example.com.conf Add this config: server { listen 80; server_name example.com www.example.com; location / { root /var/www/example.com; index index.html; try_files $uri $uri/ =404; } } Enable the site (Ubuntu only): sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/ Test and reload: sudo nginx -t sudo systemctl reload nginx","title":"CentOS (conf.d):"},{"location":"sample-2/#5-reverse-proxy-setup","text":"Use NGINX as a reverse proxy to forward requests to another service (like Node.js or backend API): server { listen 80; server_name api.example.com; location / { proxy_pass http://localhost:3000; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } }","title":"5. Reverse Proxy Setup"},{"location":"sample-2/#6-load-balancing-basic","text":"upstream backend_servers { server 192.168.1.10; server 192.168.1.11; server 192.168.1.12; } server { listen 80; location / { proxy_pass http://backend_servers; } }","title":"6. Load Balancing (Basic)"},{"location":"sample-2/#7-ssltls-with-lets-encrypt-optional-but-recommended","text":"Install Certbot: sudo apt install certbot python3-certbot-nginx # Ubuntu sudo yum install certbot python3-certbot-nginx # CentOS Obtain certificate: sudo certbot --nginx -d example.com -d www.example.com Certbot will automatically update your NGINX config to use HTTPS.","title":"7. SSL/TLS with Let\u2019s Encrypt (Optional but Recommended)"},{"location":"sample-2/#tips","text":"Always test NGINX config before reloading: sudo nginx -t Keep configs clean and modular. Use tools like NGINX Config Generator if you're new. Logs are at /var/log/nginx/access.log and /var/log/nginx/error.log . Let me know if you want guides for specific setups like WordPress, Docker, HTTP/2, etc.!","title":"\u2705 Tips"}]}